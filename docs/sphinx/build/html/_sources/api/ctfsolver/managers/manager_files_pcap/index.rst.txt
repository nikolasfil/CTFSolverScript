ctfsolver.managers.manager_files_pcap
=====================================

.. py:module:: ctfsolver.managers.manager_files_pcap

.. autoapi-nested-parse::

   manager_files_pcap.py

   This module provides the ManagerFilePcap class for handling and analyzing PCAP files using Scapy.
   It offers methods to open PCAP files, filter ICMP packets, extract TTL values, and search for specific text within packet payloads.

   Classes:
       ManagerFilePcap: Manages PCAP file operations and packet analysis.

   Typical usage example:
       manager = ManagerFilePcap()
       packets = manager.pcap_open(file=path_to_pcap)
       icmp_packets = manager.get_packets_icmp(packets)
       ttl_values = manager.get_packet_ttl(icmp_packets)
       found_text = manager.searching_text_in_packets("flag", packets)



Classes
-------

.. autoapisummary::

   ctfsolver.managers.manager_files_pcap.ManagerFilePcap


Module Contents
---------------

.. py:class:: ManagerFilePcap(*args, **kwargs)

   ManagerFilePcap provides methods for handling and analyzing PCAP files using Scapy.
   This class allows you to open PCAP files, filter packets by protocol (such as ICMP),
   extract specific packet attributes (like TTL), and search for text within packet payloads.
   .. attribute:: packets

      List of packets loaded from a PCAP file.

      :type: list[scapy.packet.Packet]

   .. attribute:: challenge_file

      Default file path for PCAP operations.

      :type: Path

   .. method:: initializing_all_ancestors(*args, **kwargs)

      
      Initializes all ancestors of the class.

   .. method:: pcap_open(file=None, save=False) -> list[scapy.packet.Packet] | None

      
      Opens a PCAP file and loads packets using Scapy.

   .. method:: get_packets_icmp(packets=None) -> list

      
      Retrieves all ICMP packets from the loaded packets.

   .. method:: get_packet_ttl(packets=None) -> list

      
      Extracts the TTL values from the provided packets.

   .. method:: searching_text_in_packets(text, packets=None, display=False) -> str

      
      Searches for a specific text in packet payloads and optionally displays matching packets.
      


   .. py:method:: initializing_all_ancestors(*args, **kwargs)

      Description:
          Initializes all the ancestors of the class
          Placeholder for overwrite




   .. py:method:: pcap_open(file=None, save=False) -> list[scapy.all.packet.Packet] | None

      Description:
          Open the pcap file with scapy and saves it in self.packets

      :param file: File to open. Defaults to None.
      :type file: Path, optional
      :param save: Save the output. Defaults to False.
      :type save: bool, optional



   .. py:method:: get_packets_icmp(packets=None)

      Description:
      Get all the ICMP packets from the packets

      :param packets: List of packets to search in. Defaults to None.
      :type packets: list, optional

      :returns: List of ICMP packets
      :rtype: list



   .. py:method:: get_packet_ttl(packets=None)

      Description:
      Get the TTL of all the ICMP packets

      :param packets: List of packets to search in. Defaults to None.
      :type packets: list, optional

      :returns: List of TTL of the ICMP packets
      :rtype: list



   .. py:method:: searching_text_in_packets(text, packets=None, display=False)

      Description:
      Search for a text in the packets that have been opened with scapy

      :param text: Text to search in the packets
      :type text: str
      :param packets: List of packets to search in. Defaults to None.
      :type packets: list, optional
      :param display: Display the packet if the text is found. Defaults to False.
      :type display: bool, optional

      :returns: Text found in the packet if found
      :rtype: str



